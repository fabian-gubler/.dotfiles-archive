# install tpm if not installed yet
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# list of plugins
# prefix + shift + i to reload
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'wfxr/tmux-fzf-url'

# customization
set -g @fzf-url-bind 'V'

# keep this line at the bottom of plugin management
run -b '~/.tmux/plugins/tpm/tpm'

# ---
# scripts
# ---

bind G run-shell "tmux neww ~/.dotfiles/scripts/utils/tmux-sessionizer"
bind s display-popup -w 40 -h 10 -E "$HOME/.dotfiles/config/tmux/scripts/fzf-session -switch"
bind Y display-popup -w 40 -h 10 -E "$HOME/.dotfiles/config/tmux/scripts/fzf-session -kill"
bind d display-popup -w 60 -h 20 -E "ncmpcpp"

# ---
# options
# ---


# general 
set-option -g prefix C-M-B
set -g focus-events on				# allows neovim autoread
set-option -g mouse on				# enable mouse
set -g base-index 1					# start from 1 (instead of 0)
set-window-option -g mode-keys vi	# enable vi mode
set -sg escape-time 0				# vim no delay (normal mode)
set -g default-shell /usr/bin/zsh	# zsh default shell

# enable true color support
set -g default-terminal "screen-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# ---
# Keymap
# ---

# Basic
bind r source ~/.tmux.conf\; display "~/.tmux.conf sourced!"
bind R set -g status

# navigations
bind u next-window 
bind C-u swap-window -t +1\; next-window
bind l previous-window 
bind C-l swap-window -t -1\; previous-window

bind m select-pane -L
bind n select-pane -D
bind e select-pane -U
bind i select-pane -R

bind N swap-pane -D
bind E swap-pane -U

# windows
bind o new-window
bind S new-session\; command-prompt 'rename-session %%'
bind y kill-pane
bind h split-window -h
bind k split-window -v
bind x kill-window -a
bind p respawn-pane -k

# vi mode
bind-key  v copy-mode
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'v' send -X begin-selection

# new windows
bind O new-window -c "#{pane_current_path}"
bind H split-window -h -c "#{pane_current_path}"
bind K split-window -v -c "#{pane_current_path}"

# naming
bind . command-prompt "rename-window '%%'"
bind , command-prompt 'rename-session %%'

# ----------------------

NORD0=#2E3440
NORD1=#3B4252
NORD2=#434C5E
NORD3=#4C566A
NORD4=#D8DEE9
NORD5=#E5E9F0
NORD6=#ECEFF4
NORD9=#81A1C1
NORD10=#5E81AC

GREY=#B0B2B6

# variables: 
# #I = Index; #W = Window

# round version  
set -g window-status-current-format " #[fg=$NORD2]#[bg=$NORD2, fg=$NORD5]#I #W#[fg=$NORD2, bg=$NORD0]"
set -g window-status-format " #[bg=$NORD0, fg=$GREY] #I #W "

# corner version
# set -g window-status-current-format "#[bg=$NORD2, fg=$NORD5] #I #W "
# set -g window-status-format "#[bg=$NORD0, fg=$GREY] #I #W "


# --- styling
set-option -g status-style bg=$NORD0
set-option -g status-right ""
set-option -g status-left "#[fg=$NORD9][#S]"
set-option -g status-justify centre
set-option -g message-style fg=#EBCB8B

# pane border
set -g pane-border-style fg=$NORD3
set -g pane-active-border-style fg=$NORD3

